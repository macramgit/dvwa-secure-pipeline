name: DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t dvwa:latest .

  sca:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy.gpg
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Run Trivy filesystem scan
        run: |
          trivy fs --severity LOW,MEDIUM,HIGH,CRITICAL --skip-dirs .git --format table .

  sast:
    runs-on: ubuntu-latest
    needs: sca

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep scan
        run: semgrep --config=auto --error

  secrets:
    runs-on: ubuntu-latest
    needs: sast

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--verbose --redact"

  dast:
    runs-on: ubuntu-latest
    needs: secrets
    services:
      dvwa:
        image: vulnerables/web-dvwa
        ports:
          - 8080:80
        options: >-
          --health-cmd "curl -s http://localhost | grep -q 'DVWA'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 10

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Wait for DVWA to be ready
        run: |
          echo "Waiting for DVWA to become healthy..."
          sleep 20

      - name: Install OWASP ZAP CLI
        run: |
          sudo snap install zaproxy --classic
          zap.sh -version

      - name: Run OWASP ZAP Baseline Scan
        run: |
          mkdir -p zap-report
          zap.sh -cmd -quickurl http://localhost:8080 -quickout zap-report/report.html -quickprogress -quickscan

      - name: Print ZAP Report Output
        run: |
          echo "=== ZAP Report Preview ==="
          head -n 50 zap-report/report.html || echo "Report missing"

