name: DevSecOps Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Build Docker image
        run: docker build -t dvwa:latest .

  sca:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install Trivy
        run: |
          sudo apt-get install wget apt-transport-https gnupg lsb-release -y
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo gpg --dearmor -o /usr/share/keyrings/trivy.gpg
          echo "deb [signed-by=/usr/share/keyrings/trivy.gpg] https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install trivy -y

      - name: Run Trivy filesystem scan
        run: |
          trivy fs --severity LOW,MEDIUM,HIGH,CRITICAL --skip-dirs .git --format table .

  sast:
    runs-on: ubuntu-latest
    needs: sca

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Semgrep
        run: pip install semgrep

      - name: Run Semgrep scan
        run: semgrep --config=auto --error

  secrets:
    runs-on: ubuntu-latest
    needs: sast

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Run Gitleaks
        uses: gitleaks/gitleaks-action@v2
        with:
          args: "--verbose --redact"

  dast:
    runs-on: ubuntu-latest
    needs: secrets

    steps:
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Start Docker
        run: |
          sudo systemctl start docker

      - name: Start DVWA container
        run: |
          docker run -d -p 8080:80 --name dvwa vulnerables/web-dvwa
          echo "Waiting for DVWA to start..."
          sleep 20

      - name: Run OWASP ZAP scan (Docker)
        run: |
          docker run --network="host" \
            owasp/zap2docker-stable zap-baseline.py \
            -t http://localhost:8080 \
            -r zap-report.html || true

      - name: Show ZAP report summary
        run: |
          echo "==== ZAP Report ===="
          head -n 40 zap-report.html || echo "No report generated"

